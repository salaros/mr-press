## Don't send the nginx version number in error pages and Server header
server_tokens off;

## Secure server from clickjacking attacks
add_header X-Frame-Options DENY;

## When serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
## to disable content-type sniffing on some browsers.
## https://www.owasp.org/index.php/List_of_useful_HTTP_headers
add_header X-Content-Type-Options nosniff;

## This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
## It's usually enabled by default anyway, so the role of this header is to re-enable the filter for 
## this particular website if it was disabled by the user.
## https://www.owasp.org/index.php/List_of_useful_HTTP_headers
add_header X-XSS-Protection "1; mode=block";

## With Content Security Policy (CSP) enabled(and a browser that supports it(http://caniuse.com/#feat=contentsecuritypolicy),
## you can tell the browser that it can only download content from the domains you explicitly allow
## http://www.html5rocks.com/en/tutorials/security/content-security-policy/
## https://www.owasp.org/index.php/Content_Security_Policy
add_header X-Content-Security-Policy "default-src 'self'; \
script-src 'self' https://ssl.google-analytics.com; \
img-src 'self' https://ssl.google-analytics.com";

## Allows web developers to experiment with policies by monitoring (but not enforcing) their effects.
add_header Content-Security-Policy-Report-Only "default-src https:; script-src https: 'unsafe-eval' 'unsafe-inline'; style-src https: 'unsafe-inline'; img-src https: data:; font-src https: data:; report-uri /csp-report";
