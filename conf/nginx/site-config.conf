## Define below a pool of sever in case you have load balancing scenario
## otherwise leave ONE uncommented entry corresponding to the address/unix socket 
## of current PHP-FPM server
upstream example_backend {
    server 127.0.0.1:9000;
#   server unix:/var/run/php5-fpm.sock;
#   server unix:/var/run/php/php7.0-fpm.sock;
#   server unix:/var/run/php/php7.1-fpm.sock;
}

server {
    listen		80;
    server_name	example.org example.test;

    ## Setting root folder
    set $root_dir /var/www/$server_name;
    root $root_dir/public;

    ## Log-related settings
    #access_log off;
    access_log $root_dir/logs/access.log;
    error_log /var/log/nginx/error-example.org.log;

    index index.php;

    ## Some useful tweaks
    proxy_buffering off;

    ## The statement below is important, it replaces default /wp-content
    ## folder with the one situated in the project root directory 
    location /wp-content/ {
        root $root_dir;
        autoindex off;
    }

    ## Disallow directory listing
    location /wp-includes/ {
        autoindex off;
    }

    ## Do not log missing or existent favicon.ico
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    ## Do not serve robots.txt directly
    ## because its contents must be generated by WordPress
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
        expires 0;
        sendfile  off;
        rewrite ^ /index.php;
    }

    ## WordPress: XML Sitemap & Google News
    rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
    rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
    rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
    rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;

    ## Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    ## Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    ## Deny access to any files with a .php extension in the uploads directory
    ## Works in sub-directory installs and also in multisite network
    ## Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }

    ## This order might seem weird - this is attempted to match last if rules below fail.
    ## http://wiki.nginx.org/HttpCoreModule
    location / {
        ## This is cool because no php is touched for static content.
        ## include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    ## Add trailing slash to */wp-admin requests.
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;

    ## Pass all .php files onto a php-fpm/php-fcgi server.
    location ~ [^/]\.php(/|$) {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }
        ## This is a robust solution for path info security issue and works with "cgi.fix_pathinfo = 1" in /etc/php.ini (default)

        fastcgi_pass example_backend;

        include fastcgi.conf;
        fastcgi_index index.php;
        fastcgi_intercept_errors off;
        fastcgi_param PATH_INFO $fastcgi_script_name;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        
        ## In order to raise the amount of time PHP allows scripts to run
        ## edit 'fastcgi_read_timeout' and 'max_execution_time' below
        ## as well as 'request_terminate_timeout' for current PHP-FPM server
        fastcgi_read_timeout 300;
        fastcgi_param PHP_VALUE "
            max_execution_time=300
            realpath_cache_size=64K
            memory_limit=256M
            upload_max_filesize=32M
            post_max_size=32M
        ";
        client_max_body_size 32M;
    }
}
